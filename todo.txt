

options 2 4 and 3

write an empty .qaaab file in output dir, then remove from list everything in those directories


watermark
 - you will need to add a staticly linked xforms window here 
 - - so user can try out different styles
 - test it is static by deleting 
 - - libforms.so.2
 - - libXpm.so.4

mention download site in Readme for compiling
use make static for distribution (needs fixing + testing)

make explanation clearer

gtk+ interface?

make more rodent traps

separate calls / rewrite more logically / remove commented out code
move the for ... if ... chkn+=(2<<j); to 
	int samesuffix(char*,char*)

check -Wall warnings (only seen on make install)

caca option

buy uk keyboard

check free(), or use garbage collection

add french?? (from environment $LANG) / other languages


-------------------------done--------------------


github

add other image file formats - 
as this is a wordpess filter, browser supported images makes sense, ie.
	anpg, avif,gif, jpg, jpeg, png, webp, bmp, tif,tiff
	- check conversion worked


check that resize value is diffent from current picture size 
	- also dont resize an already batched image (exif UserComment ?)

-- tests for JPG and jpg etc
-- progress meter
-- nonbatch check file does not exists
* do not redo files already batched (ie when program dies or is stopped - name check is sufficient)

why are we loosing includes?? - frenck kbd?? no cc -E instead of cc -E 'pkg-config --cflags --libs MagickWand'


nftw() is not happy if you create directories, while it is walking.
so maybe, 
add all the valid  image files to a resizeable array,
a[0][0]=xx/yy.jpg
a[0][1]=xx/800
a[0][2]=xx/800/yy.800.jpg
a[1][0]=xx/yy.jpg

 then process  each.

	nftw() - problematic if you write or mkdir 

why do batch and auto treat .JPG differently to .jpg ?
	-not sure but fixed anyway

parellise if > 1 CPU
 - dir with 3500 ~2M pix took 10 mins to stat!
- some sort of cache will be very helpful
- the thing to do is just use nftw to get list of valid image files
 - then create the subdirs
 - then make a list of infile/outfile pairs 
 - then start forking (limit mem + cpu maybe with cgroups maybe just limit CPUs 
			+ check for swap action(/proc/meminfo - VmallocUsed:       41036 kB))
			-- actually ech child uses about 4% of memory, so we will skip that

- think about renicing.


* do not increase filesizes (xxx.unaltered.jpg)?? -- too complicated?
* estimated time remaining would be helpfull
	- actually used files done/ignored/total


